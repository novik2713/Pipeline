import os
from datetime import datetime
import requests
from dotenv import load_dotenv
import matplotlib.pyplot as plt
import pandas as pd

def get_data():
    BASE_URL = "https://api.openweathermap.org/data/2.5/forecast?"
    API_KEY = open('api_key.txt', 'r').read().strip()
    CITY1 = "Berlin"
    url1 = BASE_URL + 'q=' + CITY1 + '&appid=' + API_KEY
    response1 = requests.get(url1).json()

    CITY2 = "Barcelona"
    url2 = BASE_URL + 'q=' + CITY2 + '&appid=' + API_KEY
    response2 = requests.get(url2).json()

    print(response1, response2)
    print('=========')
    def kelvin_to_celsius(kelvin):
        return kelvin - 273.15
    def unix_timestamp_to_datetime(timestamp):
        return datetime.utcfromtimestamp(timestamp).strftime('%H:%M:%S')

    cities = [CITY1, CITY2]
    responses = [response1, response2]

    data_list = []
    for city, response in zip(cities, responses):
        for item in response['list']: # Iterate over all items in the 'list' key
            temp_kelvin = item['main']['temp']
            temp_celsius = kelvin_to_celsius(temp_kelvin)

            feels_like_kelvin = item['main']['feels_like']
            feels_like_celsius = kelvin_to_celsius(feels_like_kelvin)

            humidity = item['main']['humidity']
            weather_desc = item['weather'][0]['description']
            wind_speed = item['wind']['speed']
            timestamp = item['dt_txt']

            data_list.append({
                'Timestamp': timestamp,
                'City': city,
                'Temperature_Celsius': temp_celsius,
                'Feels_Like_Celsius': feels_like_celsius,
                'Humidity': humidity,
                'Weather_Description': weather_desc,
                'Wind_Speed': wind_speed
            })

    #print (data_list) #Step2 just to check if it work
    return data_list
    

get_data()

#weather_df = pd.DataFrame(data_list) 
#weather_df.to_csv('weather_data.csv', index=False) #1Step to check if all func.work as i want
        
